{"version":3,"sources":["webpack:///./src/components/adminMessage.js","webpack:///./src/pages/chat/adminChat.js"],"names":["AdminMessage","message","msg","msgClass","sender","className","constants","AdminChatPage","useCookies","cookies","useState","chatUser","setChatUser","messages","setMessages","setNumMessages","msgInput","setMsgInput","useEffect","queryString","window","location","search","URLSearchParams","get","name","token","adminConnectSocket","listenForMessages","updateMessages","disconnectSocket","replace","data","concat","title","map","index","key","onSubmit","event","preventDefault","sendAdminMessage","type","placeholder","value","onChange","target"],"mappings":"oOAgBeA,G,UAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChBC,EAAMD,EAAQA,QAGdE,EAAsB,UAFbF,EAAQG,OAEe,cAAgB,eACtD,OACE,yBAAKC,UAAW,kBAAoBF,GACjCD,K,8CCEYI,IAAS,WACZA,IAAS,QA2DVC,UAzDO,WAAO,IAAD,EACIC,YAAW,CAAC,OAAQ,UAA3CC,EADmB,aAEMC,mBAAS,KAAlCC,EAFmB,KAETC,EAFS,OAGMF,mBAAS,IAAlCG,EAHmB,KAGTC,EAHS,OAIYJ,mBAAS,GAA3BK,GAJM,aAKML,mBAAS,IAAlCM,EALmB,KAKTC,EALS,KAO1BC,qBAAU,WACR,IAAMC,EAAcC,OAAOC,SAASC,OAE9BX,EADY,IAAIY,gBAAgBJ,GACXK,IAAI,QAExBC,EAAehB,EAAfgB,KAAMC,EAASjB,EAATiB,MACb,GAAKD,GAASC,EASd,OAJAC,YAAmB,CAAEF,OAAMC,QAAOf,WAAUG,cAAaC,mBACzDa,YAAkBC,GAClBjB,EAAYD,GAEL,kBAAMmB,eARXV,OAAOC,SAASU,QAAQ,iBASzB,IAEH,IAAMF,EAAiB,SAACG,GACtBlB,GAAY,SAAAD,GAAQ,OAAIA,EAASoB,OAAOD,OAY1C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAM,eACX,kBAAC,IAAD,KACE,yCAAevB,GACf,yBAAKN,UAAU,mBACZQ,EAASsB,KAAI,SAACjC,EAAKkC,GAAN,OACZ,kBAAC,EAAD,CAAcnC,QAASC,EAAKmC,IAAKD,QAGrC,0BAAME,SAfS,SAACC,GACpBA,EAAMC,iBACNC,YAAiBzB,KAcX,2BAAO0B,KAAK,OAAOC,YAAY,eAAeC,MAAO5B,EAAU6B,SApBnD,SAACN,GACnBtB,EAAYsB,EAAMO,OAAOF,UAoBnB,2BAAOF,KAAK,SAASE,MAAM","file":"component---src-pages-chat-admin-chat-js-aa8fb28a19168b2e890f.js","sourcesContent":["import React from \"react\";\n\nimport \"../assets/devos.css\";\n\nconst AdminMessage = ({ message }) => {\n  const msg = message.message;\n  const sender = message.sender;\n\n  const msgClass = sender === \"admin\" ? \"userMessage\" : \"otherMessage\";\n  return (\n    <div className={\"messageWrapper \" + msgClass}>\n      {msg}\n    </div>\n  );\n}\n\nexport default AdminMessage;","import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\nimport Subpage from \"../../components/subpage\";\nimport AdminMessage from \"../../components/adminMessage\";\nimport { adminConnectSocket, disconnectSocket, listenForMessages, sendAdminMessage } from \"../../js/socket.js\";\n\nimport \"../../assets/styles.css\";\nimport \"../../assets/chat.css\";\nimport constants from '../../../constants.js';\n\nconst SOCKET_URL = constants[\"SOCKET_URL\"];\nconst API_URL = constants[\"API_URL\"];\n\nconst AdminChatPage = () => {\n  const [cookies, setCookies] = useCookies([\"name\", \"token\"]);\n  const [chatUser, setChatUser] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [numMessages, setNumMessages] = useState(0);\n  const [msgInput, setMsgInput] = useState(\"\");\n\n  useEffect(() => {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const chatUser = urlParams.get('user');\n\n    const {name, token} = cookies;\n    if (!name || !token) {\n      window.location.replace(\"/chat/login\")\n      return;\n    }\n    \n    adminConnectSocket({ name, token, chatUser, setMessages, setNumMessages });\n    listenForMessages(updateMessages);\n    setChatUser(chatUser);\n    \n    return () => disconnectSocket();\n  }, []);\n  \n  const updateMessages = (data) => {\n    setMessages(messages => messages.concat(data))\n  }\n\n  const handleInput = (event) => {\n    setMsgInput(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    sendAdminMessage(msgInput);\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Admin Chat\" />\n      <Subpage>\n        <h2>Chat with {chatUser}</h2>\n        <div className=\"messagesWrapper\">\n          {messages.map((msg, index) => (\n            <AdminMessage message={msg} key={index}/>\n          ))}\n        </div>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" placeholder=\"send message\" value={msgInput} onChange={handleInput}/>\n          <input type=\"submit\" value=\"send\"/>\n        </form>\n      </Subpage>\n    </Layout>\n  );\n};\n\nexport default AdminChatPage;\n"],"sourceRoot":""}