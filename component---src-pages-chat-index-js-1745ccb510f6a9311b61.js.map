{"version":3,"sources":["webpack:///./src/components/chatMessage.js","webpack:///./src/pages/chat/index.js"],"names":["ChatMessage","message","msg","sender","msgWrapper","msgClass","className","ChatPage","useState","messages","setMessages","setNumMessages","msgInput","setMsgInput","useCookies","cookies","chatBarRef","useRef","formRef","useEffect","name","token","connectSocket","listenForMessages","updateMessages","disconnectSocket","window","location","replace","data","concat","handleSubmit","event","preventDefault","sendMessage","title","map","index","key","ref","onSubmit","onKeyDown","e","keyCode","shiftKey","onHeightChange","current","style","maxRows","type","placeholder","value","onChange","target","required","icon","faArrowRight"],"mappings":"gMAmBeA,G,UAfK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACfC,EAAMD,EAAQA,QACdE,EAASF,EAAQE,OAEjBC,EAAwB,UAAXD,EAAqB,eAAiB,cACnDE,EAAsB,UAAXF,EAAqB,eAAiB,cACvD,OACE,yBAAKG,UAAWF,GACd,yBAAKE,UAAWD,GACbH,M,oEC4EMK,UAzEE,WAAO,IAAD,EACWC,mBAAS,IAAlCC,EADc,KACJC,EADI,OAEiBF,mBAAS,GAA3BG,GAFC,aAGWH,mBAAS,IAAlCI,EAHc,KAGJC,EAHI,OAISC,YAAW,CAAC,OAAQ,UAA3CC,EAJc,KAKfC,GALe,KAKFC,iBAAO,OACpBC,EAAUD,iBAAO,MAEvBE,qBAAU,WAAO,IACRC,EAAeL,EAAfK,KAAMC,EAASN,EAATM,MACb,GAAKD,GAASC,EAUd,OAHAC,YAAc,CAAEF,OAAMC,QAAOX,cAAaC,mBAC1CY,YAAkBC,GAEX,kBAAMC,eATP,oBAAOC,QACTA,OAAOC,SAASC,QAAQ,iBAS3B,IAEH,IAAMJ,EAAiB,SAACK,GACtBnB,GAAY,SAAAD,GAAQ,OAAIA,EAASqB,OAAOD,OAOpCE,EAAe,SAACC,GACpBA,EAAMC,iBACS,IAAZrB,IACDsB,YAAYtB,GACZC,EAAY,MAmBhB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsB,MAAM,SACX,kBAAC,IAAD,KACE,4BAAKpB,EAAQK,MACb,yBAAKd,UAAU,mBACZG,EAAS2B,KAAI,SAAClC,EAAKmC,GAAN,OACZ,kBAAC,EAAD,CAAapC,QAASC,EAAKoC,IAAKD,QAGpC,0BAAME,IAAKrB,EAASZ,UAAU,YAAYkC,SAAUT,GAClD,kBAAC,IAAD,CAAkBU,UAlBL,SAACC,GACJ,IAAbA,EAAEC,SAA+B,GAAdD,EAAEE,WACpBF,EAAET,iBACFF,EAAaW,KAegCH,IAAKvB,EAAY6B,eA1B/C,SAACb,GAElBhB,EAAW8B,QAAQC,MAAnB,UADCf,EAAQ,IAC+B,SAEA,UAsBsD1B,UAAU,UAAU0C,QAAQ,IAAIC,KAAK,OAAOC,YAAY,eAAeC,MAAOvC,EAAUwC,SAtCtK,SAACpB,GACnBnB,EAAYmB,EAAMqB,OAAOF,QAqCsLG,UAAQ,IACjN,4BAAQhD,UAAU,aAAa2C,KAAK,UAAS,kBAAC,IAAD,CAAiBM,KAAMC","file":"component---src-pages-chat-index-js-1745ccb510f6a9311b61.js","sourcesContent":["import React from \"react\";\n\nimport \"../assets/devos.css\";\n\nconst ChatMessage = ({ message }) => {\n  const msg = message.message;\n  const sender = message.sender;\n\n  const msgWrapper = sender === \"admin\" ? \"otherWrapper\" : \"userWrapper\";\n  const msgClass = sender === \"admin\" ? \"otherMessage\" : \"userMessage\";\n  return (\n    <div className={msgWrapper}>\n      <div className={msgClass}>\n        {msg}\n      </div>\n    </div>\n  );\n}\n\nexport default ChatMessage;","\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\nimport Subpage from \"../../components/subpage\";\nimport ChatMessage from \"../../components/chatMessage\";\nimport { connectSocket, disconnectSocket, listenForMessages, sendMessage } from \"../../js/socket.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\nimport TextareaAutosize from 'react-textarea-autosize'\n\nimport \"../../assets/styles.css\";\nimport \"../../assets/chat.css\";\n\nconst ChatPage = () => {\n  const [messages, setMessages] = useState([]);\n  const [numMessages, setNumMessages] = useState(0);\n  const [msgInput, setMsgInput] = useState(\"\");\n  const [cookies, setCookies] = useCookies([\"name\", \"token\"]);\n  const chatBarRef = useRef(null);\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    const {name, token} = cookies;\n    if (!name || !token) {\n      if (typeof window !== `undefined`) {\n        window.location.replace(\"/chat/login\");\n      }\n      return;\n    }\n\n    connectSocket({ name, token, setMessages, setNumMessages });\n    listenForMessages(updateMessages);\n    \n    return () => disconnectSocket();\n  }, []);\n\n  const updateMessages = (data) => {\n    setMessages(messages => messages.concat(data));\n  }\n\n  const handleInput = (event) => {\n    setMsgInput(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(msgInput != '') {\n      sendMessage(msgInput);\n      setMsgInput(\"\")\n    }\n  }\n\n  const handleScroll = (event) => {\n    if(event > 100) {\n      chatBarRef.current.style[\"overflowY\"] = \"scroll\"\n    } else {\n      chatBarRef.current.style[\"overflowY\"] = \"hidden\"\n    }\n  }\n\n  const onEnterPress = (e) => {\n    if(e.keyCode == 13 && e.shiftKey == false) {\n        e.preventDefault();\n        handleSubmit(e)\n    }\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Chat\" />\n      <Subpage>\n        <h2>{cookies.name}</h2>\n        <div className=\"messagesWrapper\">\n          {messages.map((msg, index) => (\n            <ChatMessage message={msg} key={index}/>\n          ))}\n        </div>\n        <form ref={formRef} className=\"chatInput\" onSubmit={handleSubmit}>\n          <TextareaAutosize onKeyDown={onEnterPress} ref={chatBarRef} onHeightChange={handleScroll} className=\"chatBar\" maxRows=\"6\" type=\"text\" placeholder=\"send message\" value={msgInput} onChange={handleInput} required/>\n          <button className=\"chatSubmit\" type=\"submit\"><FontAwesomeIcon icon={faArrowRight} /></button>\n        </form>\n      </Subpage>\n    </Layout>\n  );\n};\n\nexport default ChatPage;\n"],"sourceRoot":""}